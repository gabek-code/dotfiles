#
# Blank space added around the window in pixels. This padding is scaled
# by DPI and the specified value is always added at both opposing sides.
window:
  padding:
    x: 15
    y: 15
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    family: SpaceMono Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Regular
  # Point size
  size: 8.0
  offset:
    x: 0
    y: 0
  #   - ToggleFullscreen
  #   - SpawnNewInstance
  #       Spawn a new instance of Alacritty.
  #   - CreateNewWindow
  #       Create a new Alacritty window from the current process.
  #   - ClearLogNotice
  #       Clear Alacritty's UI warning and error notice.
  #   - ClearSelection
  #       Remove the active selection.
  #   - ReceiveChar
  #   - None
  #
  # - Vi mode exclusive actions:
  #
  #   - Open
  #       Perform the action of the first matching hint under the vi mode cursor
  #       with `mouse.enabled` set to `true`.
  #   - ToggleNormalSelection
  #   - ToggleLineSelection
  #   - ToggleBlockSelection
  #   - ToggleSemanticSelection
  #       Toggle semantic selection based on `selection.semantic_escape_chars`.
  #
  # - Vi mode exclusive cursor motion actions:
  #
  #   - Up
  #       One line up.
  #   - Down
  #       One line down.
  #   - Left
  #       One character left.
  #   - Right
  #       One character right.
  #   - First
  #       First column, or beginning of the line when already at the first column.
  #   - Last
  #       Last column, or beginning of the line when already at the last column.
  #   - FirstOccupied
  #       First non-empty cell in this terminal row, or first non-empty cell of
  #       the line when already at the first cell of the row.
  #   - High
  #       Top of the screen.
  #   - Middle
  #       Center of the screen.
  #   - Low
  #       Bottom of the screen.
  #   - SemanticLeft
  #       Start of the previous semantically separated word.
  #   - SemanticRight
  #       Start of the next semantically separated word.
  #   - SemanticLeftEnd
  #       End of the previous semantically separated word.
  #   - SemanticRightEnd
  #       End of the next semantically separated word.
  #   - WordLeft
  #       Start of the previous whitespace separated word.
  #   - WordRight
  #       Start of the next whitespace separated word.
  #   - WordLeftEnd
  #       End of the previous whitespace separated word.
  #   - WordRightEnd
  #       End of the next whitespace separated word.
  #   - Bracket
  #       Character matching the bracket at the cursor's location.
  #   - SearchNext
  #       Beginning of the next match.
  #   - SearchPrevious
  #       Beginning of the previous match.
  #   - SearchStart
  #       Start of the match to the left of the vi mode cursor.
  #   - SearchEnd
  #       End of the match to the right of the vi mode cursor.
  #
  # - Search mode exclusive actions:
  #   - SearchFocusNext
  #       Move the focus to the next search match.
  #   - SearchFocusPrevious
  #       Move the focus to the previous search match.
  #   - SearchConfirm
  #   - SearchCancel
  #   - SearchClear
  #       Reset the search regex.
  #   - SearchDeleteWord
  #       Delete the last word in the search regex.
  #   - SearchHistoryPrevious
  #       Go to the previous regex in the search history.
  #   - SearchHistoryNext
  #       Go to the next regex in the search history.
  #
  # - macOS exclusive actions:
  #   - ToggleSimpleFullscreen
  #       Enter fullscreen without occupying another space.
  #
  # - Linux/BSD exclusive actions:
  #
  #   - CopySelection
  #       Copy from the selection buffer.
  #   - PasteSelection
  #       Paste from the selection buffer.
  #
  # - `command`: Fork and execute a specified command plus arguments
  #
  #    The `command` field must be a map containing a `program` string and an
  #    `args` array of command line parameter strings. For example:
  #       `{ program: "alacritty", args: ["-e", "vttest"] }`
  #
  # And optionally:
  #
  # - `mods`: Key modifiers to filter binding actions
  #
  #    - Command
  #    - Control
  #    - Option
  #    - Super
  #    - Shift
  #    - Alt
  #
  #    Multiple `mods` can be combined using `|` like this:
  #       `mods: Control|Shift`.
  #    Whitespace and capitalization are relevant and must match the example.
colors:
  name: Isotope (dark)
  author: Chris Kempson
  primary:
    background: "#000000"
    foreground: "#d0d0d0"
  cursor:
    text: "#000000"
    cursor: "#d0d0d0"
  normal:
    black: "#000000"
    red: "#ff0000"
    green: "#33ff00"
    yellow: "#ff0099"
    blue: "#0066ff"
    magenta: "#cc00ff"
    cyan: "#00ffff"
    white: "#d0d0d0"
  bright:
    black: "#808080"
    red: "#ff0000"
    green: "#33ff00"
    yellow: "#ff0099"
    blue: "#0066ff"
    magenta: "#cc00ff"
    cyan: "#00ffff"
    white: "#ffffff"
theme: Isotope.dark
